"""new irrigation zones

Revision ID: 9f879392463c
Revises: d94947a9c5ff
Create Date: 2022-09-04 21:44:10.749669

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '9f879392463c'
down_revision = 'd94947a9c5ff'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('greenhouse_state_irrigation', sa.Column('recipe_time', sa.Time(), nullable=True))
    op.add_column('greenhouse_state_irrigation', sa.Column('recipe_sunday', sa.Boolean(), nullable=True))
    op.add_column('greenhouse_state_irrigation', sa.Column('recipe_monday', sa.Boolean(), nullable=True))
    op.add_column('greenhouse_state_irrigation', sa.Column('recipe_tuesday', sa.Boolean(), nullable=True))
    op.add_column('greenhouse_state_irrigation', sa.Column('recipe_wednesday', sa.Boolean(), nullable=True))
    op.add_column('greenhouse_state_irrigation', sa.Column('recipe_thursday', sa.Boolean(), nullable=True))
    op.add_column('greenhouse_state_irrigation', sa.Column('recipe_friday', sa.Boolean(), nullable=True))
    op.add_column('greenhouse_state_irrigation', sa.Column('recipe_saturday', sa.Boolean(), nullable=True))
    op.execute("UPDATE greenhouse_state_irrigation SET recipe_time='12:00:00', recipe_sunday=false, recipe_monday=false, recipe_tuesday=false, recipe_wednesday=false, recipe_thursday=false, recipe_friday=false, recipe_saturday=false")
    op.alter_column('greenhouse_state_irrigation', 'recipe_time', nullable=False)
    op.alter_column('greenhouse_state_irrigation', 'recipe_sunday', nullable=False)
    op.alter_column('greenhouse_state_irrigation', 'recipe_monday', nullable=False)
    op.alter_column('greenhouse_state_irrigation', 'recipe_tuesday', nullable=False)
    op.alter_column('greenhouse_state_irrigation', 'recipe_wednesday', nullable=False)
    op.alter_column('greenhouse_state_irrigation', 'recipe_thursday', nullable=False)
    op.alter_column('greenhouse_state_irrigation', 'recipe_friday', nullable=False)
    op.alter_column('greenhouse_state_irrigation', 'recipe_saturday', nullable=False)
    op.drop_column('greenhouse_state_irrigation', 'recipe_stop_window')
    op.drop_column('greenhouse_state_irrigation', 'recipe_start_window')
    op.drop_column('greenhouse_state_irrigation', 'recipe_frequency')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('greenhouse_state_irrigation', sa.Column('recipe_frequency', postgresql.INTERVAL(), autoincrement=False, nullable=False))
    op.add_column('greenhouse_state_irrigation', sa.Column('recipe_start_window', postgresql.TIME(), autoincrement=False, nullable=False))
    op.add_column('greenhouse_state_irrigation', sa.Column('recipe_stop_window', postgresql.TIME(), autoincrement=False, nullable=False))
    op.drop_column('greenhouse_state_irrigation', 'recipe_saturday')
    op.drop_column('greenhouse_state_irrigation', 'recipe_friday')
    op.drop_column('greenhouse_state_irrigation', 'recipe_thursday')
    op.drop_column('greenhouse_state_irrigation', 'recipe_wednesday')
    op.drop_column('greenhouse_state_irrigation', 'recipe_tuesday')
    op.drop_column('greenhouse_state_irrigation', 'recipe_monday')
    op.drop_column('greenhouse_state_irrigation', 'recipe_sunday')
    op.drop_column('greenhouse_state_irrigation', 'recipe_time')
    # ### end Alembic commands ###
