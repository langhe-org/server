"""added recipes

Revision ID: d94947a9c5ff
Revises: 87c30bda988c
Create Date: 2022-08-28 12:42:24.088195

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd94947a9c5ff'
down_revision = '87c30bda988c'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('greenhouse_state_irrigation',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('greenhouse_state_id', sa.Integer(), nullable=False),
        sa.Column('valve', sa.Boolean(), nullable=False),
        sa.Column('recipe_start_window', sa.Time(), nullable=False),
        sa.Column('recipe_stop_window', sa.Time(), nullable=False),
        sa.Column('recipe_duration', postgresql.INTERVAL(), nullable=False),
        sa.Column('recipe_frequency', postgresql.INTERVAL(), nullable=False),
        sa.ForeignKeyConstraint(['greenhouse_state_id'], ['greenhouse_state.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.add_column('greenhouse_state', sa.Column('environment_recipe_day_temperature', sa.Float(), nullable=False))
    op.add_column('greenhouse_state', sa.Column('environment_recipe_night_temperature', sa.Float(), nullable=False))
    op.add_column('greenhouse_state', sa.Column('environment_recipe_humidity_limit', sa.Float(), nullable=False))
    sulfurintensity = postgresql.ENUM('off', 'low', 'medium', 'high', name='sulfurintensity')
    sulfurintensity.create(op.get_bind())
    op.add_column('greenhouse_state', sa.Column('ipm_recipe_intensity', sulfurintensity, nullable=False))
    op.add_column('greenhouse_state', sa.Column('lighting_recipe_start_at', sa.Time(), nullable=False))
    op.add_column('greenhouse_state', sa.Column('lighting_recipe_stop_at', sa.Time(), nullable=False))
    lightingrecipeintensity = postgresql.ENUM('low', 'medium', 'high', name='lightingrecipeintensity')
    lightingrecipeintensity.create(op.get_bind())
    op.add_column('greenhouse_state', sa.Column('lighting_recipe_intensity', lightingrecipeintensity, nullable=False))
    op.drop_column('greenhouse_state', 'valves')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('greenhouse_state', sa.Column('valves', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True)) # wasn't nullable before
    op.drop_column('greenhouse_state', 'lighting_recipe_intensity')
    op.execute("DROP TYPE lightingrecipeintensity;")
    op.drop_column('greenhouse_state', 'lighting_recipe_stop_at')
    op.drop_column('greenhouse_state', 'lighting_recipe_start_at')
    op.drop_column('greenhouse_state', 'ipm_recipe_intensity')
    op.execute("DROP TYPE sulfurintensity;")
    op.drop_column('greenhouse_state', 'environment_recipe_humidity_limit')
    op.drop_column('greenhouse_state', 'environment_recipe_night_temperature')
    op.drop_column('greenhouse_state', 'environment_recipe_day_temperature')
    op.drop_table('greenhouse_state_irrigation')
    # ### end Alembic commands ###
